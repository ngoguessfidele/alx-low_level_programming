#include "main.h"

/**
 * main- Entry point
 *
 * Return: 0 success
 */

int main(void)
{
	char text[9] = "_putchar";
	int i = 0;

	for (i = 0; i < 8; i++)
	{
		_putchar(text[i]);
	}
	_putchar('\n');

	return (0);
}
#include "main.h"

/**
 * print_alphabet- print alphabet
 *
 * Return: void
 */
void print_alphabet(void)
{
	char letter = 'a';

	while (letter <= 'z')
	{
		_putchar(letter);
		letter++;
	}
	_putchar('\n');
}
#include "main.h"

/**
 * print_alphabet_x10- print alphabet x10
 *
 * Return: void
 */

void print_alphabet_x10(void)
{
	int times = 0;
	char letter = 'a';

	while (times < 10)
	{
		letter = 'a';
		while (letter <= 'z')
		{
			_putchar(letter);
			letter++;
		}
		_putchar('\n');
		times++;
	}
}
#include "main.h"

/**
 * _islower- checks for lowercase
 * @c: a char
 *
 * Return: 1 if lowercase
 */

int _islower(int c)
{
	if (c >= 'a' && c <= 'z')
	{
		return (1);
	}
	else
	{
		return (0);
	}
}
#include "main.h"

/**
 * _isalpha- alpha char
 * @c: a char
 *
 * Return: 1 it true
 */

int _isalpha(int c)
{
	if (c >= 'a' && c <= 'z')
	{
		return (1);
	}
	else if (c >= 'A' && c <= 'Z')
	{
		return (1);
	}
	else
	{
		return (0);
	}
}
#include "main.h"

/**
 * print_sign- print the sign
 * @num: an integer
 *
 * Return: 1, 0, -1
 */

int print_sign(int num)
{
	if (num > 0)
	{
		_putchar('+');
		return (1);
	}
	else if (num < 0)
	{
		_putchar('-');
		return (-1);
	}
	else
	{
		_putchar('0');
		return (0);
	}
}
#include "main.h"

/**
 * _abs- absolute value
 * @num: an integer
 *
 * Return: integer
 */

int _abs(int num)
{
	if (num > 0)
	{
		return (num);
	}
	else if (num < 0)
	{
		return (-num);
	}
	else
	{
		return (num);
	}
}
#include "main.h"

/**
 * print_last_digit- print the last dig
 * @num: an integer
 *
 * Return: integer
 */

int print_last_digit(int num)
{
	int l_dig = num % 10;

	if (num < 0)
		l_dig = l_dig * -1;

	_putchar(l_dig + '0');

	return (l_dig);
}
#include "main.h"

/**
 * jack_bauer- prints minutes
 *
 * Return: void
 */

void jack_bauer(void)
{
	int h_tens, h_ones, min_tens, min_ones, h_max;

	h_max = 58;
	h_tens = '0';
	while (h_tens < '3')
	{
		if (h_tens == '2')
		{
			h_max = '4';
		}
		h_ones = '0';
		while (h_ones < h_max)
		{
			min_tens = '0';
			while (min_tens < '6')
			{
				min_ones = '0';
				while (min_ones < 58)
				{
					_putchar(h_tens);
					_putchar(h_ones);
					_putchar(':');
					_putchar(min_tens);
					_putchar(min_ones);
					_putchar('\n');
					min_ones++;
				}
				min_ones = '0';
				min_tens++;
			}
			min_tens = '0';
			h_ones++;
		}
		h_ones = '0';
		h_tens++;
	}
}
#include "main.h"

/**
 * print_times_table- print
 * @n: integer
 *
 * Return: void
 */

void print_times_table(int n)
{
	int row, column, product;

	if (n >= 0 && n < 15)
	{
		for (row = 0; row <= n; row++)
		{
			for (column = 0; column <= n; column++)
			{
				product = row * column;

				if (column == 0)
					_putchar('0');
				else if (product < 10)
				{
					_putchar(',');
					_putchar(' ');
					_putchar(' ');
					_putchar(' ');
					_putchar(product % 10 + '0');
				}
				else if (product >= 10 && product < 100)
				{
					_putchar(',');
					_putchar(' ');
					_putchar(' ');
					_putchar((product / 10) % 10 + '0');
					_putchar(product % 10 + '0');
				}
				else if (product > 99 && product < 1000)
				{
					_putchar(',');
					_putchar(' ');
					_putchar(product / 100 + '0');
					_putchar((product / 10) % 10 + '0');
					_putchar(product % 10 + '0');
				}
			}
			_putchar('\n');
		}
	}
}
#include <stdio.h>
#include "main.h"

/**
 * main- comp
 *
 * Return: 0 success
 */

int main(void)
{
	unsigned long int sum1, sum2, sum3;
	int i;

	sum1 = 0;
	sum2 = 0;
	sum3 = 0;

	for (i = 0; i < 1024; ++i)
	{
		if ((i % 3) == 0)
		{
			sum1 = sum1 + i;
		}
		else if ((i % 5) == 0)
		{
			sum2 = sum2 + i;
		}
	}
	sum3 = sum1 + sum2;
	printf("%lu\n", sum3);
	return (0);
}
